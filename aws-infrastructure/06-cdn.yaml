AWSTemplateFormatVersion: '2010-09-09'
Description: 'Julius Wirth CloudFront CDN Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: 'production'
    AllowedValues: ['development', 'staging', 'production']
    Description: Environment name
  
  ProjectName:
    Type: String
    Default: 'julius-wirth'
    Description: Project name for resource tagging

  DomainName:
    Type: String
    Default: 'julius-wirth.com'
    Description: Domain name for the website

  SSLCertificateArn:
    Type: String
    Description: ARN of the SSL certificate in us-east-1 region
    Default: ''

Resources:
  # Security Headers Response Policy
  SecurityHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub '${ProjectName}-security-headers-${Environment}'
        Comment: Security headers for Julius Wirth
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 31536000
            IncludeSubdomains: true
            Preload: true
            Override: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: SAMEORIGIN
            Override: true
          ReferrerPolicy:
            ReferrerPolicy: strict-origin-when-cross-origin
            Override: true
          XSSProtection:
            ModeBlock: true
            Protection: true
            Override: true
        CustomHeadersConfig:
          Items:
            - Header: Permissions-Policy
              Value: "geolocation=(), microphone=(), camera=()"
              Override: true
            - Header: Content-Security-Policy
              Value: "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https: data:;"
              Override: true

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub '${ProjectName} CDN for ${Environment}'
        DefaultRootObject: index.php
        
        # Origins
        Origins:
          # Application Load Balancer Origin
          - Id: ALBOrigin
            DomainName: 
              Fn::ImportValue: !Sub '${ProjectName}-alb-dns-${Environment}'
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
              OriginSSLProtocols: [TLSv1.2]
            OriginPath: ''
            
          # S3 Public Files Origin
          - Id: S3Origin
            DomainName: 
              Fn::ImportValue: !Sub '${ProjectName}-public-bucket-domain-${Environment}'
            S3OriginConfig:
              OriginAccessIdentity: 
                Fn::Sub: 
                  - 'origin-access-identity/cloudfront/${OAI}'
                  - OAI: 
                      Fn::ImportValue: !Sub '${ProjectName}-oai-id-${Environment}'
            OriginPath: ''
        
        # Default Cache Behavior (for dynamic content)
        DefaultCacheBehavior:
          TargetOriginId: ALBOrigin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # CORS-S3Origin
          ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
          Compress: true
          AllowedMethods: [GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE]
          CachedMethods: [GET, HEAD, OPTIONS]
          
        # Additional Cache Behaviors
        CacheBehaviors:
          # Static files from S3
          - PathPattern: '/sites/default/files/*'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: true
            AllowedMethods: [GET, HEAD, OPTIONS]
            CachedMethods: [GET, HEAD, OPTIONS]
            
          # CSS and JS files (from ALB)
          - PathPattern: '*.css'
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: true
            AllowedMethods: [GET, HEAD]
            CachedMethods: [GET, HEAD]
            
          - PathPattern: '*.js'
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: true
            AllowedMethods: [GET, HEAD]
            CachedMethods: [GET, HEAD]
            
          # Images (from ALB)
          - PathPattern: '*.jpg'
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: true
            AllowedMethods: [GET, HEAD]
            CachedMethods: [GET, HEAD]
            
          - PathPattern: '*.png'
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: true
            AllowedMethods: [GET, HEAD]
            CachedMethods: [GET, HEAD]
            
          - PathPattern: '*.gif'
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
            ResponseHeadersPolicyId: !Ref SecurityHeadersPolicy
            Compress: true
            AllowedMethods: [GET, HEAD]
            CachedMethods: [GET, HEAD]
        
        # Aliases (conditional)
        Aliases: !If
          - HasCustomDomain
          - [!Ref DomainName, !Sub 'www.${DomainName}']
          - []
        
        # SSL Certificate (conditional)
        ViewerCertificate: !If
          - HasCustomDomain
          - AcmCertificateArn: !Ref SSLCertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - CloudFrontDefaultCertificate: true
        
        # Geographic Restrictions
        Restrictions:
          GeoRestriction:
            RestrictionType: none
        
        # Error Pages
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: /403.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 500
            ResponseCode: 500
            ResponsePagePath: /500.html
            ErrorCachingMinTTL: 60
        
        # Distribution Configuration
        PriceClass: PriceClass_100
        HttpVersion: http2
        
        # Logging Configuration
        Logging:
          Bucket: !GetAtt LoggingBucket.DomainName
          IncludeCookies: false
          Prefix: !Sub '${ProjectName}-cloudfront-logs/'
        
        # Web Application Firewall (will be configured separately)
        WebACLId: !If
          - HasWAF
          - Fn::ImportValue: !Sub '${ProjectName}-waf-acl-${Environment}'
          - !Ref 'AWS::NoValue'
      
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-cdn-${Environment}'
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for CloudFront Logs
  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-cloudfront-logs-${Environment}-${AWS::AccountId}'
      AccessControl: LogDeliveryWrite
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 90
          - Id: TransitionLogs
            Status: Enabled
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 60
                StorageClass: GLACIER
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-cloudfront-logs-${Environment}'
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # Route 53 Records (conditional)
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: HasCustomDomain
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID
        EvaluateTargetHealth: false

  WWWDNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: HasCustomDomain
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub 'www.${DomainName}'
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID
        EvaluateTargetHealth: false

  # CloudWatch Alarms for CDN Monitoring
  CloudFrontErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CloudFront high error rate
      AlarmActions:
        - !Ref CDNAlarmTopic
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution

  CloudFrontCacheHitRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CloudFront low cache hit rate
      AlarmActions:
        - !Ref CDNAlarmTopic
      MetricName: CacheHitRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 70
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution

  # SNS Topic for CDN Alarms
  CDNAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${ProjectName}-cdn-alarms-${Environment}'
      DisplayName: Julius Wirth CDN Alarms

# Conditions
Conditions:
  HasCustomDomain: !Not [!Equals [!Ref DomainName, '']]
  HasSSLCertificate: !Not [!Equals [!Ref SSLCertificateArn, '']]
  HasWAF: !Not [!Equals [!Ref 'AWS::NoValue', !Ref 'AWS::NoValue']]

# Additional Parameters for Route 53
Parameters:
  HostedZoneId:
    Type: String
    Description: Route 53 Hosted Zone ID for the domain
    Default: ''

Outputs:
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${ProjectName}-cdn-id-${Environment}'

  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${ProjectName}-cdn-domain-${Environment}'

  CloudFrontDistributionURL:
    Description: CloudFront Distribution URL
    Value: !Sub 'https://${CloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${ProjectName}-cdn-url-${Environment}'

  LoggingBucketName:
    Description: CloudFront logging bucket name
    Value: !Ref LoggingBucket
    Export:
      Name: !Sub '${ProjectName}-cdn-logs-bucket-${Environment}'

  CDNAlarmTopicArn:
    Description: SNS topic for CDN alarms
    Value: !Ref CDNAlarmTopic
    Export:
      Name: !Sub '${ProjectName}-cdn-alarm-topic-${Environment}'